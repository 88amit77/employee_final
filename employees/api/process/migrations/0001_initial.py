# Generated by Django 3.0.7 on 2020-07-24 15:24

import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('dept_id', models.AutoField(primary_key=True, serialize=False)),
                ('dept_name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Flow',
            fields=[
                ('flow_id', models.AutoField(primary_key=True, serialize=False)),
                ('percentage_complete', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='FlowMainChecklist',
            fields=[
                ('flow_main_id', models.AutoField(primary_key=True, serialize=False)),
                ('files_main', models.FileField(blank=True, null=True, upload_to='flow_main_chklist/videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['gif', 'mp4', 'png', 'jpeg', 'jpg'])])),
                ('is_checked', models.BooleanField(blank=True, default=False)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flows', to='process.Flow')),
            ],
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('process_id', models.AutoField(primary_key=True, serialize=False)),
                ('process_name', models.CharField(max_length=50)),
                ('process_description', models.CharField(blank=True, max_length=50, null=True)),
                ('process_training', models.FileField(blank=True, null=True, upload_to='process/videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['gif', 'log', 'mp4', 'png', 'jpeg', 'jpg', 'webm'])])),
                ('process_time_allocated', models.DurationField(blank=True)),
                ('process_department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='depts', to='process.Departments')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessMainid',
            fields=[
                ('process_mainid', models.AutoField(primary_key=True, serialize=False)),
                ('main_name', models.CharField(blank=True, max_length=50, null=True)),
                ('offsetx', models.FloatField()),
                ('offsety', models.FloatField()),
                ('main_attachment', models.FileField(blank=True, null=True, upload_to='process_main/videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['gif', 'mp4', 'png', 'jpeg', 'jpg'])])),
                ('main_description', models.TextField(blank=True, max_length=200)),
                ('main_department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mdepts', to='process.Departments')),
                ('process_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processes', to='process.Process')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessSubpoint',
            fields=[
                ('process_subpointid', models.AutoField(primary_key=True, serialize=False)),
                ('subpoint_name', models.CharField(blank=True, max_length=50, null=True)),
                ('subpoint_attachment', models.FileField(blank=True, null=True, upload_to='process_subpoint/videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['gif', 'mp4', 'png', 'jpeg', 'jpg'])])),
                ('subpoint_description', models.TextField(blank=True, max_length=100)),
                ('pmain_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mainprocess', to='process.ProcessMainid')),
            ],
        ),
        migrations.CreateModel(
            name='RepeatTask',
            fields=[
                ('repeat_id', models.AutoField(primary_key=True, serialize=False)),
                ('repeat_type', models.CharField(max_length=50)),
                ('interval_repeat', models.IntegerField()),
                ('end_date', models.DateField()),
                ('weekly_days', django.contrib.postgres.fields.jsonb.JSONField()),
                ('monthly_date', models.IntegerField()),
                ('yearly_date', models.DateField()),
                ('yearly_month', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('flow_time_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('starttime', models.DurationField(blank=True)),
                ('stoptime', models.DurationField(blank=True)),
                ('total_time', models.DurationField(blank=True)),
                ('mainpoints', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintime', to='process.ProcessMainid')),
                ('subpoints', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtime', to='process.ProcessSubpoint')),
                ('tflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeflows', to='process.Flow')),
            ],
        ),
        migrations.CreateModel(
            name='RegularTask',
            fields=[
                ('regular_task_id', models.AutoField(primary_key=True, serialize=False)),
                ('task_name', models.CharField(max_length=50)),
                ('task_deptname', models.CharField(max_length=50)),
                ('task_type', models.CharField(max_length=50)),
                ('members', django.contrib.postgres.fields.jsonb.JSONField()),
                ('task_description', models.TextField(blank=True, max_length=100, null=True)),
                ('task_files', django.contrib.postgres.fields.jsonb.JSONField()),
                ('task_duedate', models.DateField()),
                ('cron', models.CharField(default='', max_length=50)),
                ('prc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regularprocess', to='process.Process')),
            ],
        ),
        migrations.CreateModel(
            name='FlowSubpointChecklist',
            fields=[
                ('flow_subpoint_id', models.AutoField(primary_key=True, serialize=False)),
                ('files_main', models.FileField(blank=True, null=True, upload_to='flow_subpt_chklist/videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['gif', 'mp4', 'png', 'jpeg', 'jpg'])])),
                ('flow_main', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mainflow', to='process.FlowMainChecklist')),
                ('flowpt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flowss', to='process.Flow')),
                ('subpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subs', to='process.ProcessSubpoint')),
            ],
        ),
        migrations.AddField(
            model_name='flowmainchecklist',
            name='mprocess',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mainprocessflow', to='process.ProcessMainid'),
        ),
        migrations.AddField(
            model_name='flow',
            name='regular_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taskflow', to='process.RegularTask'),
        ),
        migrations.CreateModel(
            name='Connections',
            fields=[
                ('connector_id', models.AutoField(primary_key=True, serialize=False)),
                ('connector_text', models.CharField(max_length=50)),
                ('connection_process', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='connectors', to='process.Process')),
                ('end_mainpoint_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mainconnector', to='process.ProcessMainid')),
                ('start_mainpoint_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mainconnect', to='process.ProcessMainid')),
            ],
        ),
    ]
